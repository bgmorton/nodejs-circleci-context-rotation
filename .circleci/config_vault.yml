version: 2.1

orbs:
  node: circleci/node@5.1.0

# The commands and jobs defined in this file for connecting CircleCI to HashiCorp Vault using OIDC are explained in the tutorial at https://circleci.com/blog/oidc-with-vault/

commands: 
  install-vault:
    steps:
      - run:
          name: Install Vault and prereqs
          command: |
            vault -h && exit 0 || echo "Installing vault"
            # only runs if vault command above fails
            cd /tmp
            wget https://releases.hashicorp.com/vault/1.12.2/vault_1.12.2_linux_amd64.zip
            unzip vault_1.12.2_linux_amd64.zip
            sudo mv vault /usr/local/bin        
            vault -h
  vault-auto-auth:
    description: "Use Vault auto auth to load secrets"
    steps:
      - run:
          name: Auto-authenticate with Vault
          command: |
            # Write the CircleCI provided value to a file read by Vault
            echo $CIRCLE_OIDC_TOKEN > .circleci/vault/token.json
            # Substitute the env vars in our context to render the Vault config file
            sudo apt update && sudo apt install gettext-base
            envsubst < .circleci/vault/agent.hcl.tpl > .circleci/vault/agent.hcl
            # This config indicates which secrets to collect and how to authenticate     
            vault agent -config=.circleci/vault/agent.hcl
      - run:
          name: Set Environment Variables from Vault
          command: |
            # In order to properly expose values in Environment, we _source_ the shell values written by agent
            source .circleci/vault/setenv

workflows:
  vault: 
    jobs:
      - setup-vault-and-load-secrets:
          context:
            - circleci-vault-demo
  testing:
    jobs:
      - nodejs-test:
          # Set the contexts this job will run in - this must match the name of the context in your Organisation Settings
          context:
            - example_context
  # Based on the success of this job, we could then go on to build an image using the included Dockerfile and the CircleCI Docker orb, and continue to deployment...

jobs:
  setup-vault-and-load-secrets:
    docker: 
      - image: cimg/base:2023.01
    steps:
      - checkout
      - install-vault
      - vault-auto-auth
      - run: 
          name: Use secrets retrieved from Vault in a subsequent step
          command: |
            echo "Username is $SECRET_DEMO_USERNAME, password is $SECRET_DEMO_PASSWORD"
  nodejs-test:
    executor: node/default
    steps:
      - run: echo "Running build and test!"
      # Get the code from the repository
      - checkout
      # Confirm Node.js is present
      - run: node --version
      # Install dependencies
      - run:
          command: npm install
          name: Install Node.js app dependencies
      # Write environmental variables to the .env file - note that the username and password variables are taken from the previous setup-vault-and-load-secrets job, CircleCI persists data between jobs
      - run: echo "HTTP_USERNAME=$SECRET_DEMO_USERNAME" > .env
      - run: echo "HTTP_PASSWORD=$SECRET_DEMO_PASSWORD" >> .env
      # Run test
      - run:
          command: npm run test
          name: Test app
